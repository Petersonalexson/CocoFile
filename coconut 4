Sub CreateQueryTablesFromHierarchies()
    Dim arrSheets As Variant
    Dim i As Long
    Dim rangeName As String
    Dim queryName As String
    Dim sheetName As String
    Dim querySheet As Worksheet
    
    ' Get the hierarchy matrix
    With wsLists
        arrSheets = .Range("Hierarchy_Matrix")
    End With
    
    ' Turn off screen updating for better performance
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    ' Loop through each hierarchy
    For i = LBound(arrSheets) To UBound(arrSheets)
        rangeName = Trim(arrSheets(i, 2))  ' This is the array/named range created after zoom in
        sheetName = Trim(arrSheets(i, 1))
        queryName = sheetName & "_Table"
        
        ' Check if the array exists
        Dim rangeExists As Boolean
        rangeExists = False
        
        On Error Resume Next
        If Not ThisWorkbook.Names(rangeName) Is Nothing Then
            rangeExists = True
        End If
        On Error GoTo 0
        
        If Not rangeExists Then
            MsgBox "Named range '" & rangeName & "' does not exist. Did you run the RefreshSmartViewHierarchies first?", vbExclamation
            GoTo NextHierarchy
        End If
        
        ' Check if the query sheet exists
        On Error Resume Next
        Set querySheet = ThisWorkbook.Worksheets(queryName)
        On Error GoTo 0
        
        If querySheet Is Nothing Then
            ' Create a new sheet for the query table
            Set querySheet = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
            querySheet.Name = queryName
        Else
            ' Clear existing content
            querySheet.UsedRange.Clear
        End If
        
        ' Create a Power Query using the named range (array) as source
        On Error Resume Next
        ' Remove any existing query with this name
        For Each Connection In ThisWorkbook.Connections
            If Connection.Name = queryName Then
                Connection.Delete
                Exit For
            End If
        Next Connection
        On Error GoTo 0
        
        ' Create the Power Query
        Dim queryText As String
        queryText = "let" & vbCrLf & _
                   "    Source = Excel.CurrentWorkbook(){[Name=""" & rangeName & """]}[Content]," & vbCrLf & _
                   "    #""Changed Type"" = Table.TransformColumnTypes(Source,{{""Column1"", type text}})," & vbCrLf & _
                   "    #""Removed Top Rows"" = Table.Skip(#""Changed Type"", 0)," & vbCrLf & _
                   "    #""Unflatten"" = fnGetERPHierarchySmartViewParent(#""Removed Top Rows"")" & vbCrLf & _
                   "in" & vbCrLf & _
                   "    #""Unflatten"""
        
        ' Create the workbook query
        Dim wbQuery As WorkbookQuery
        On Error Resume Next
        Set wbQuery = ThisWorkbook.Queries.Add(queryName, queryText, True)
        
        If Err.Number <> 0 Then
            MsgBox "Error creating query: " & Err.Description, vbExclamation
            GoTo NextHierarchy
        End If
        On Error GoTo 0
        
        ' Create the query table
        Dim qryTable As QueryTable
        Set qryTable = querySheet.QueryTables.Add( _
            Connection:="OLEDB;Provider=Microsoft.Mashup.OleDb.1;Data Source=$Workbook$;Location=" & queryName, _
            Destination:=querySheet.Range("A1"))
        
        ' Set up the query table properties
        With qryTable
            .CommandType = xlCmdSql
            .CommandText = Array(queryName)
            .BackgroundQuery = False
            .RefreshStyle = xlOverwriteCells
            .SaveData = True
            .RefreshOnFileOpen = False
            .AdjustColumnWidth = True
            
            ' Refresh the query
            On Error Resume Next
            .Refresh BackgroundQuery:=False
            If Err.Number <> 0 Then
                MsgBox "Error refreshing query: " & Err.Description, vbExclamation
            End If
            On Error GoTo 0
        End With
        
        ' Auto-fit columns
        querySheet.Columns("A:Z").AutoFit
        
NextHierarchy:
    Next i
    
    ' Turn screen updating back on
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    
    MsgBox "Query tables created/updated successfully using the arrays!", vbInformation, "Process Complete"
End Sub
