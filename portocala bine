import pandas as pd
import numpy as np

def categorize_row(description, min_threshold=3):

    if not isinstance(description, str):

        return "No Description"

    desc_lower = description.lower()


    acc_count = desc_lower.count("accural")   
    rev_count = desc_lower.count("reversal")

    total = acc_count + rev_count

    if total < min_threshold:

        return description
    else:
        # We have enough hits; figure out which category
        if acc_count > 0 and rev_count > 0:
            return "Accural + Reversal"
        elif acc_count > 0:
            return "Accural"
        else:
            return "Reversal"

# part 2

import pandas as pd

df = pd.read_excel("your_file.xlsx")

df_pivot = df.pivot_table(
    index=["CC", "XO", "VOICE DATE", "JL Description"], 
    columns="Period",
    values="Amount",
    aggfunc="sum",
    fill_value=0
).reset_index()

df_pivot = df_pivot.sort_values(by="XO", ascending=True)

print(df_pivot)
df_pivot.to_excel("output.xlsx", index=False)

# part 3

import pandas as pd

df = pd.read_excel("your_file.xlsx")

has_voice_date = df["VOICE DATE"].notna()

missing_xo = df["XO"].isna()

desc_lower = df["JL Description"].astype(str).str.lower()
has_acc_or_rev = desc_lower.str.contains("accural") | desc_lower.str.contains("reversal")

rows_to_keep = has_voice_date | ((df["VOICE DATE"].isna() | missing_xo) & has_acc_or_rev)

df_filtered = df[rows_to_keep]

df_pivot = df_filtered.pivot_table(
    index=["CC", "XO", "VOICE DATE", "JL Description"],
    columns="Period",
    values="Amount",
    aggfunc="sum",
    fill_value=0
).reset_index()

df_pivot = df_pivot.sort_values(by="XO", ascending=True)

print(df_pivot)
df_pivot.to_excel("output.xlsx", index=False)

# part 4

import pandas as pd

df = pd.read_excel("your_file.xlsx")

missing_xo = df["XO"].isna()
missing_voice_date = df["VOICE DATE"].isna()
missing_voice_num = df["VOICE NUM"].isna()

all_missing = missing_xo & missing_voice_date & missing_voice_num

combined_text = (
    df["JN Writing"].fillna("").astype(str) + " " +
    df["JL Description"].fillna("").astype(str)
).str.lower()

has_acc_or_rev = combined_text.str.contains("accrual") | combined_text.str.contains("reversal")

rows_to_keep = (~all_missing) | (all_missing & has_acc_or_rev)

df_filtered = df[rows_to_keep].copy()

pivot_index = ["CC", "XO", "VOICE DATE", "VOICE NUM", "JN Writing", "JL Description"]

df_pivot = df_filtered.pivot_table(
    index=pivot_index,
    columns="Period",
    values="Amount",
    aggfunc="sum",
    fill_value=0
)

df_pivot = df_pivot.reset_index()

df_pivot = df_pivot.sort_values(by="XO", ascending=True)

print(df_pivot)
df_pivot.to_excel("output.xlsx", index=False)

# part 4

import pandas as pd

df = pd.read_excel("your_file.xlsx")
mx = df["XO"].isna()
md = df["VOICE DATE"].isna()
mn = df["VOICE NUM"].isna()
am = mx & md & mn
t = (df["JN Writing"].fillna("") + " " + df["JL Description"].fillna("")).str.lower()
r = t.str.contains("accrual|accural|reversal|reversals", case=False, regex=True)
k = (~am) | (am & r)
f = df[k]
p = f.pivot_table(index=["CC","XO","VOICE DATE","VOICE NUM","JN Writing","JL Description"],
                  columns="Period",
                  values="Amount",
                  aggfunc="sum",
                  fill_value=0).reset_index()
p.to_excel("output.xlsx", index=False)

# part 5

import pandas as pd

df = pd.read_excel("your_file.xlsx")

# Part 1: Original aggregation with whatever columns exist
possible_index_cols = ["CC","JN Writing","JL Description","XO","VOICE DATE","VOICE NUM"]
index_cols = [c for c in possible_index_cols if c in df.columns]

p1 = df.pivot_table(
    index=index_cols,
    columns="Period",
    values="Amount",
    aggfunc="sum",
    fill_value=0
).reset_index()

p1.to_excel("output_original.xlsx", index=False)

# Part 2: Filter rows that contain "accrual"/"accural"/"reversal"/"reversals" in either JN or JL
if ("JN Writing" in df.columns) and ("JL Description" in df.columns):
    combined = (df["JN Writing"].fillna("") + " " + df["JL Description"].fillna("")).str.lower()
    mask = combined.str.contains("accrual|accural|reversal|reversals", case=False, regex=True)
    df2 = df[mask]
else:
    df2 = df.iloc[0:0]  # empty if those columns don't exist

p2 = df2.pivot_table(
    index=index_cols,
    columns="Period",
    values="Amount",
    aggfunc="sum",
    fill_value=0
).reset_index()

p2.to_excel("output_accrual_reversal.xlsx", index=False)

# part 6

import pandas as pd

df = pd.read_excel("your_file.xlsx")
mx = df["XO"].isna()
md = df["VOICE DATE"].isna()
mn = df["VOICE NUM"].isna()
am = mx & md & mn
t = (df["JN Writing"].fillna("") + " " + df["JL Description"].fillna("")).str.lower()
r = t.str.contains("accrual|accural|reversal|reversals", case=False, regex=True)
k = (~am) | (am & r)
f = df[k]
p = f.pivot_table(
    index=["CC","XO","VOICE DATE","VOICE NUM","JN Writing","JL Description"],
    columns="Period",
    values="Amount",
    aggfunc="sum",
    fill_value=0
).reset_index()

def highlight_acc_r(row):
    jn = str(row["JN Writing"]).lower()
    jl = str(row["JL Description"]).lower()
    if any(x in jn for x in ["accrual","accural","reversal","reversals"]) \
       or any(x in jl for x in ["accrual","accural","reversal","reversals"]):
        return ["background-color: yellow"] * len(row)
    return ["" for _ in row]

styled = p.style.apply(highlight_acc_r, axis=1)
styled.to_excel("output.xlsx", index=False)

# part 7

import pandas as pd

df = pd.read_excel("your_file.xlsx")

for c in ["CC","XO","VOICE DATE","VOICE NUM","JN Writing","JL Description","Period","Amount"]:
    if c not in df.columns:
        df[c] = ""
df[["CC","XO","VOICE DATE","VOICE NUM","JN Writing","JL Description","Amount"]] = df[["CC","XO","VOICE DATE","VOICE NUM","JN Writing","JL Description","Amount"]].fillna("")

df["combined"] = (df["JN Writing"].astype(str) + " " + df["JL Description"].astype(str)).str.lower()

mask_accrual_rev = df["combined"].str.contains("accrual|accural|reversal|reversals", case=False, regex=True)
df_accrual_rev = df[mask_accrual_rev].copy()

p1 = df_accrual_rev.pivot_table(
    index=["JN Writing","JL Description","CC","XO","VOICE DATE","VOICE NUM"],
    columns="Period",
    values="Amount",
    aggfunc="sum",
    fill_value=0
).reset_index()
p1["Section"] = "Accrual/Reversal"

df_voice_date = df[df["VOICE DATE"] != ""].copy()

p2 = df_voice_date.pivot_table(
    index=["JN Writing","JL Description","CC","XO","VOICE DATE","VOICE NUM"],
    columns="Period",
    values="Amount",
    aggfunc="sum",
    fill_value=0
).reset_index()
p2["Section"] = "Voice Date"

final = pd.concat([p1, p2], ignore_index=True)

cols = ["Section","JN Writing","JL Description","CC","XO","VOICE DATE","VOICE NUM"]
remaining = [c for c in final.columns if c not in cols]
final = final[cols + remaining]

final.to_excel("output.xlsx", index=False)

# part 8

import pandas as pd

df = pd.read_excel("your_file.xlsx")

# Make sure these columns exist; if missing, create them as blank
needed_cols = ["Period","CC","XO","VOICE DATE","VOICE NUM","JN Writing","JL Description","Amount"]
for c in needed_cols:
    if c not in df.columns:
        df[c] = ""
df[needed_cols] = df[needed_cols].fillna("")

# Combine JN + JL for searching
df["combined"] = (df["JN Writing"].astype(str) + " " + df["JL Description"].astype(str)).str.lower()

# PART 1: Accrual/Reversal detection
mask_accrual_rev = df["combined"].str.contains("accrual|accural|reversal|reversals", case=False, regex=True)
df_accrual_rev = df[mask_accrual_rev].copy()

p1 = df_accrual_rev.pivot_table(
    index=["JN Writing","JL Description","CC","XO","VOICE DATE","VOICE NUM"],
    columns="Period",
    values="Amount",
    aggfunc="sum",
    fill_value=0
).reset_index()

p1["Section"] = "Accrual/Reversal"

# PART 2: Voice Date present
df_voice_date = df[df["VOICE DATE"] != ""].copy()

p2 = df_voice_date.pivot_table(
    index=["JN Writing","JL Description","CC","XO","VOICE DATE","VOICE NUM"],
    columns="Period",
    values="Amount",
    aggfunc="sum",
    fill_value=0
).reset_index()

p2["Section"] = "Voice Date"

# Combine both pivot results
final_pivot = pd.concat([p1, p2], ignore_index=True)

# Now "Period" is currently across columns. We want to "separate amounts by Period"
# by melting so that each (row + period) is a separate row.
# After the melt, we'll have columns: 
# [JN Writing, JL Description, CC, XO, VOICE DATE, VOICE NUM, Section, Period, Amount]

id_vars = ["JN Writing","JL Description","CC","XO","VOICE DATE","VOICE NUM","Section"]
melted = final_pivot.melt(
    id_vars=id_vars,
    var_name="PeriodHeaderA1",  # rename the pivoted column
    value_name="Amount"
)

# Reorder columns if desired
final_cols = ["Section","JN Writing","JL Description","CC","XO","VOICE DATE","VOICE NUM","PeriodHeaderA1","Amount"]
melted = melted[final_cols]

# Write out
melted.to_excel("output.xlsx", index=False)









